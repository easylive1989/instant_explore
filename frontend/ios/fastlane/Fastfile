# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  # 共用的 App Store Connect API 設定
  def get_api_key
    app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
      key_filepath: "~/.appstoreconnect/private_keys/AuthKey_#{ENV['APP_STORE_CONNECT_API_KEY_ID']}.p8",
      duration: 1200, # 20 minutes
      in_house: false
    )
  end

  # 共用的 Beta Review 資訊
  def get_beta_review_info
    {
      contact_email: "easylive1989@gmail.com",
      contact_first_name: "Paul",
      contact_last_name: "Wu",
      contact_phone: "",
      demo_account_name: "demo@example.com",
      demo_account_password: "demo123",
      notes: "此版本透過 CI/CD 自動建置並上傳"
    }
  end

  desc "Build iOS app using Flutter"
  lane :build_flutter_ios do
    # 設定檔案路徑常數
    source_ipa = "../../build/ios/ipa/instantexplore.ipa"
    target_ipa = "../Runner.ipa"
    
    Dir.chdir("../..") do
      sh("flutter", "build", "ipa", "--release",
         "--dart-define=GOOGLE_MAPS_API_KEY=#{ENV['GOOGLE_MAPS_API_KEY']}",
         "--dart-define=SUPABASE_URL=#{ENV['SUPABASE_URL']}",
         "--dart-define=SUPABASE_ANON_KEY=#{ENV['SUPABASE_ANON_KEY']}",
         "--dart-define=GOOGLE_WEB_CLIENT_ID=#{ENV['GOOGLE_WEB_CLIENT_ID']}",
         "--dart-define=GOOGLE_IOS_CLIENT_ID=#{ENV['GOOGLE_IOS_CLIENT_ID']}")
    end

    # 移動建置好的 IPA 到正確位置
    sh("cp #{source_ipa} #{target_ipa}")
  end

  desc "Complete build and deploy workflow"
  lane :deploy_testflight do
    # 設定檔案路徑常數
    ipa_file = "../Runner.ipa"
    
    # 先用 Flutter 建置
    build_flutter_ios

    # 檢查 IPA 檔案是否存在
    unless File.exist?(ipa_file)
      UI.user_error!("❌ 找不到 IPA 檔案進行上傳：#{File.expand_path(ipa_file)}")
    end
    
    # 上傳到 TestFlight
    upload_to_testflight(
      api_key: get_api_key,
      ipa: File.expand_path(ipa_file),
      skip_waiting_for_build_processing: true,
      changelog: "透過 CI/CD 自動建置上傳",
      beta_app_review_info: get_beta_review_info
    )

    UI.success("✅ iOS App 已成功建置並上傳到 TestFlight！")
  end
end